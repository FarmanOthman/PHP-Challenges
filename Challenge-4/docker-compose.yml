version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_challenge_4
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_USER: laravel
    ports:
      - "3307:3306"
    volumes:
      - ./database/mysql/data:/var/lib/mysql
      - ./database/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7.0-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - ./database/redis/data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "composer install && php artisan key:generate --ansi && php artisan migrate --force && php artisan serve --host=0.0.0.0 --port=8000"

  websocket_server:
    image: quay.io/soketi/soketi:latest-16-alpine
    container_name: websocket_server
    restart: unless-stopped
    ports:
      - "6001:6001"
    environment:
      DEBUG: "true"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID:-app-id}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY:-app-key}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET:-app-secret}"
      SOKETI_ENABLE_CLIENT_MESSAGES: "true"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge